using System;
using System.Reflection;
using CodeDom;

namespace CodeDomSort
{
    class Program
    {
        static void Main(string[] args)
        {
            
            var array = ArrayGenerator.GenerateArray(50);
            Console.WriteLine(array.ToFlatText());
            
            // Sort.QuickSort<int>(array, new LastElementStrategy());
            // Console.WriteLine(array.ToFlatText());

             var code = new CodeDomSortGenerating().BuildSortAssembly();
            // Console.WriteLine(code);

            //var sorter = new QuickSorter();
            // sorter.QuickSort(array, new LastElementPivotStrategy());
             //sorter.QuickSort(array, new FirstElementPivotStrategy());
             //sorter.QuickSort(array, new LastElementPivotStrategy());

            var assembly = new CodeDomSortGenerating().FormAssembly();

             var codeDomSorter = CreateSorter(assembly);
             codeDomSorter.QuickSort<int>(array, CreateLastElementPivotStrategy(assembly));
            
            Console.WriteLine(array.ToFlatText());
            
            
        }

        private static dynamic CreateSorter(Assembly assembly)
        {
            var quickSorterType = assembly.GetType("AutoGenerated.Sorting.QuickSort.QuickSorter");
            return Activator.CreateInstance(quickSorterType);
        }

        private static dynamic CreateFirstElementPivotStrategy(Assembly assembly)
        {
            var pivotStrategyType = assembly.GetType("AutoGenerated.Sorting.QuickSort.FirstElementPivotStrategy");
            return Activator.CreateInstance(pivotStrategyType);
        }
        
        private static dynamic CreateLastElementPivotStrategy(Assembly assembly)
        {
            var pivotStrategyType = assembly.GetType("AutoGenerated.Sorting.QuickSort.LastElementPivotStrategy");
            return Activator.CreateInstance(pivotStrategyType);
        }
    }
}
